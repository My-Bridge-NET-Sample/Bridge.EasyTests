# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  #BUILD_BUILDNUMBER: '$(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)' 

  
steps:



- task: CmdLine@2
  inputs:
    script: |
      echo Write your commands here
      
      echo Hello world
      
      echo $(Build.BuildNumber)
      echo $(name)

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your powershell commands here.
           
      # Use the environment variables input below to pass secret variables to this script.
      $year= Get-Date â€“format yy;
      $month= (Get-Date).month;
      Write-Host "##vso[task.setvariable variable=version]$year.$month.$(Rev:.r)"


- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: 'Bridge.EasyTests/Bridge.EasyTest.Sources.nuspec'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'version'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop-et'
    publishLocation: 'Container'
